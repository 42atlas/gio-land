{"version":3,"sources":["main.js"],"names":["kaboom","global","background","width","height","scale","canvas","document","getElementById","font","fullscreen","scaleMode","MAP_WIDTH","loadAseprite","loadSprite","loadSound","LEVELS","levelConf","pos","vec2","sprite","area","solid","origin","H","b","f","bump","c","cleanup","lifespan","fade","M","patrol","body","F","_","E","anim","tarma","A","ami","D","dito","state","Y","shark","speed","p","frame","mario","score","distance","dir","id","require","startingPos","add","onCollide","update","Math","abs","x","move","isAlive","squash","unuse","stop","use","offset","stopAtOrigin","bumpOffset","bumped","origPos","direction","y","smallAnimation","bigAnimation","flameanimation","smallStopFrame","bigStopFrame","flameStopFrame","smallJumpFrame","bigJumpFrame","flameJumpFrame","flameShotFrame","isBig","isFrozen","isFlamy","standing","isKeyDown","shooting","isGrounded","running","jumping","bigger","flamy","isShooting","smaller","animation","curAnim","play","freeze","die","volume","detune","rand","scene","text","size","color","onKeyRelease","go","time","setData","toFixed","levelNumber","layers","level","addLevel","music","layer","fixed","timer","onUpdate","dt","scoreText","directions","LEFT","RIGHT","current_direction","player","spawn","BULLET_SPEED","grow","rate","n","addExplode","rad","i","wait","rect","outline","killed","pause","toWorld","onKeyDown","flipX","toScreen","onKeyPress","jump","canSquash","bulletSpeed","sub","e","destroy","currCam","camPos","onFall","baddy","shake","on","obj","is","gridPos","mushy","flower","castle","side","nextLevel","totscore","tottime","length","s"],"mappings":"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","file":"main.bcc342dd.js","sourceRoot":"..","sourcesContent":["kaboom({\r\n  global: true,\r\n\r\n  background: [134, 135, 247],\r\n  width: 320,\r\n  height: 240,\r\n  scale: 3,\r\n  canvas: document.getElementById(\"game\"),\r\n  font: \"sink\",\r\n  fullscreen: true,\r\n  scaleMode: \"stretch\",\r\n});\r\n\r\nconst MAP_WIDTH = 320;\r\n\r\n/* loadRoot(\"sprites/\"); */\r\nloadAseprite(\"mario\", \"Mario.png\", \"Mario.json\");\r\nloadAseprite(\"enemies\", \"enemies.png\", \"enemies.json\");\r\nloadSprite(\"ground\", \"ground.png\");\r\nloadSprite(\"questionBox\", \"questionBox.png\");\r\nloadSprite(\"emptyBox\", \"emptyBox.png\");\r\nloadSprite(\"brick\", \"brick.png\");\r\nloadSprite(\"coin\", \"coin.png\");\r\nloadSprite(\"bigMushy\", \"bigMushy.png\");\r\nloadSprite(\"Flower\", \"Flower.png\");\r\nloadSprite(\"pipeTop\", \"pipeTop.png\");\r\nloadSprite(\"pipeBottom\", \"pipeBottom.png\");\r\nloadSprite(\"shrubbery\", \"shrubbery.png\");\r\nloadSprite(\"hill\", \"hill.png\");\r\nloadSprite(\"cloud\", \"cloud.png\");\r\nloadSprite(\"castle\", \"castle.png\");\r\nloadSprite(\"noce\", \"noce.png\");\r\nloadSprite(\"racchetta\", \"racchetta.png\");\r\n\r\n/* loadRoot(\"sounds/\"); */\r\nloadSound(\"mushroom\", \"mushroom.wav\");\r\nloadSound(\"coin\", \"coin.wav\");\r\nloadSound(\"flower\", \"flower.wav\");\r\nloadSound(\"jump\", \"jump.wav\");\r\nloadSound(\"hit\", \"hit.wav\");\r\nloadSound(\"gameover\", \"gameover.wav\");\r\nloadSound(\"stageclear\", \"stageclear.wav\");\r\nloadSound(\"goodbox\", \"goodbox.wav\");\r\nloadSound(\"getsmall\", \"getsmall.wav\");\r\nloadSound(\"flower-chomp\", \"flower-chomp.mp3\");\r\nloadSound(\"noce\", \"noce.wav\");\r\n\r\n//soundtrack\r\nloadSound(\"level0\", \"level0.mp3\");\r\nloadSound(\"level1\", \"level1.mp3\");\r\nloadSound(\"level2\", \"level2.mp3\");\r\nloadSound(\"level3\", \"level3.mp3\");\r\n\r\nconst LEVELS = [\r\n  [\r\n    \"                                                                                                                                                                                                           \",\r\n    \"                                                                                                                                                                                                           \",\r\n    \"                                                                                                                                                                                                           \",\r\n    \"                                                                                                                                                                                                           \",\r\n    \"                                                                                                                                                                                                           \",\r\n    \"                                                                                                                                                                                                           \",\r\n    \"                                                                                                                                       ?                                                                   \",\r\n    \"      -?-b-                 ?-                                                  -??-                                   ?                                                                                   \",\r\n    \"                                                      ?          ?                                ?                                                                                                        \",\r\n    \"                                                             ?                                               -f-  ?                                               ---      ???   ---                       \",\r\n    \"                                                 -                                                                                               _                                                         \",\r\n    \"                                   _                                                                                                _     _      |                                                         \",\r\n    \"                       _           |    _                _               _                                                  _       |     |      |             -                                           \",\r\n    \"                E      |           |    |      E   E     |           E   |              A     _         _   A               |       |     |      |             |          E E E E                 H        \",\r\n    \"=================================================================================================  ===========================   =====   ===   ============================================================\",\r\n    \"=================================================================================================  ===========================   =====   ===   ============================================================\",\r\n  ],\r\n  [\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                         ?                                                                                   -?-                                                                            \",\r\n    \"                                                                   f                                                                                                                                        \",\r\n    \"                                   -?-                                                                                                                  ?                                                   \",\r\n    \"                                                                                                               -?-                                                                                          \",\r\n    \"      -?-b-                  -?-                                                                   b                               E                                                                        \",\r\n    \"                                                                                                                                  -?-                                ---                                    \",\r\n    \"                                                                                 -?-                                E                                                                                       \",\r\n    \"                                                           -                                                       -?-                                                                                      \",\r\n    \"                                                           |                              -                                                                                                                 \",\r\n    \"       _                                            _      |                              |                                     _                                                                           \",\r\n    \"       |                            A               |      |    E    E                    |          A           A   _          | A          A             E              A                       H         \",\r\n    \"================     =========================================================     ======================================    ===============================================================================\",\r\n    \"================     =========================================================     ======================================    ===============================================================================\",\r\n  ],\r\n  [\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                       ?                                                                                                                                                                    \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                   -?-             -?-         -?-          -?-                                                                                                                             \",\r\n    \"                                                                                                                                                                                ?      ?                    \",\r\n    \"      -?-f-                  -b-                                                         ---?--?--?--?                                                                        ?                             \",\r\n    \"                                                                                                                                          ?-f-?                                                             \",\r\n    \"                                                                                                                          ?-                                                                                \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                             Y           Y            Y                   Y                Y       Y       Y                                                                                                \",\r\n    \"       _                     _           _            _        _          _                _       _       _                         _                                                                      \",\r\n    \"       |                     |    E      |    A       |        |    A     |     A          |       |       |   E                     |                              D                             H         \",\r\n    \"================     ====================================     =======================================================   =======   ==========================================================================\",\r\n    \"================     ====================================     =======================================================   =======   ==========================================================================\",\r\n  ],\r\n  [\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                               ????????????????????????????????????                                                                                                                         \",\r\n    \"                                   -?-                                                                                                                                                                      \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"      -?-b-                  -?-                                                         -f-                                              --?-                                                              \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                                                                                                            \",\r\n    \"                                                                                                                      _                                                                                     \",\r\n    \"                                                                                                         _            |                                      _                                              \",\r\n    \"       _               _                                              _          _                       |            |                  _                   |                                              \",\r\n    \"       |               |          E  E  E  EE  E   D   A    A    A    |     D    |                       |            |         D        |        D          |        D                           H         \",\r\n    \"================     ================================================================  ==========    =========   ===========================================================================================\",\r\n    \"================     ================================================================  ==========    =========   ===========================================================================================\",\r\n  ],\r\n];\r\n\r\nconst levelConf = {\r\n  // grid size\r\n  width: 16,\r\n  height: 16,\r\n  pos: vec2(0, 0),\r\n  // define each object as a list of components\r\n  \"=\": () => [\r\n    sprite(\"ground\"),\r\n    area(),\r\n    solid(),\r\n    origin(\"bot\"),\r\n    \"ground\",\r\n    \"wall\",\r\n  ],\r\n  \"-\": () => [sprite(\"brick\"), area(), solid(), origin(\"bot\"), \"brick\", \"wall\"],\r\n  H: () => [\r\n    sprite(\"castle\"),\r\n    area({ width: 1, height: 240 }),\r\n\r\n    origin(\"bot\"),\r\n    \"castle\",\r\n  ],\r\n  \"?\": () => [\r\n    sprite(\"questionBox\"),\r\n    area(),\r\n    solid(),\r\n    origin(\"bot\"),\r\n    \"questionBox\",\r\n    \"coinBox\",\r\n    \"wall\",\r\n  ],\r\n  b: () => [\r\n    sprite(\"questionBox\"),\r\n    area(),\r\n    solid(),\r\n    origin(\"bot\"),\r\n    \"questionBox\",\r\n    \"mushyBox\",\r\n    \"wall\",\r\n  ],\r\n  f: () => [\r\n    sprite(\"questionBox\"),\r\n    area(),\r\n    solid(),\r\n    origin(\"bot\"),\r\n    \"questionBox\",\r\n    \"flowerBox\",\r\n    \"wall\",\r\n  ],\r\n  \"!\": () => [\r\n    sprite(\"emptyBox\"),\r\n    area(),\r\n    solid(),\r\n    bump(),\r\n    origin(\"bot\"),\r\n    \"emptyBox\",\r\n    \"wall\",\r\n  ],\r\n  c: () => [\r\n    sprite(\"coin\"),\r\n    area(),\r\n    solid(),\r\n    bump(64, 8),\r\n    cleanup(),\r\n    lifespan(1, { fade: 0.5 }),\r\n    origin(\"bot\"),\r\n    \"coin\",\r\n  ],\r\n  M: () => [\r\n    sprite(\"bigMushy\"),\r\n    area(),\r\n    solid(),\r\n    patrol(10000),\r\n    body(),\r\n    cleanup(),\r\n    origin(\"bot\"),\r\n    \"bigMushy\",\r\n  ],\r\n  F: () => [\r\n    sprite(\"Flower\"),\r\n    area(),\r\n    solid(),\r\n    body(),\r\n    cleanup(),\r\n    origin(\"bot\"),\r\n    \"Flower\",\r\n  ],\r\n  \"|\": () => [\r\n    sprite(\"pipeBottom\"),\r\n    area(),\r\n    solid(),\r\n    origin(\"bot\"),\r\n    \"pipe\",\r\n    \"wall\",\r\n  ],\r\n  _: () => [sprite(\"pipeTop\"), area(), solid(), origin(\"bot\"), \"pipe\", \"wall\"],\r\n  E: () => [\r\n    sprite(\"enemies\", { anim: \"Walking\" }),\r\n    area({ width: 20, height: 24 }),\r\n    solid(),\r\n    body(),\r\n    patrol(50),\r\n    tarma(),\r\n    origin(\"bot\"),\r\n    \"badGuy\",\r\n    \"enemy\",\r\n  ],\r\n  A: () => [\r\n    sprite(\"enemies\", { anim: \"Walk\" }),\r\n    area({ width: 26, height: 20 }),\r\n    solid(),\r\n    body(),\r\n    patrol(100),\r\n    ami(),\r\n    origin(\"bot\"),\r\n    \"badGuy\",\r\n    \"enemy\",\r\n  ],\r\n  D: () => [\r\n    sprite(\"enemies\", { anim: \"WalkHB\" }),\r\n    area({ width: 20, height: 28 }),\r\n    solid(),\r\n    body(),\r\n    patrol(30),\r\n    dito(),\r\n    state(\"move\", [\"idle\", \"attack\", \"move\"]),\r\n    origin(\"bot\"),\r\n    \"badGuy\",\r\n    \"enemy\",\r\n    \"dito\",\r\n  ],\r\n  Y: () => [\r\n    sprite(\"enemies\", { anim: \"Piranha\" }),\r\n    area({ width: 20, height: 28 }),\r\n    /* solid(), */\r\n    /* body(), */\r\n    shark(),\r\n    origin(\"top\"),\r\n    \"shark\",\r\n    \"badGuyShark\",\r\n    \"enemy\",\r\n    {\r\n      speed: 20,\r\n    },\r\n  ],\r\n  p: () => [\r\n    sprite(\"mario\", { frame: 0 }),\r\n    area({ width: 16, height: 16 }),\r\n    body(),\r\n    mario(),\r\n    bump(150, 20, false),\r\n    origin(\"bot\"),\r\n    \"player\",\r\n    {\r\n      score: 0,\r\n    },\r\n  ],\r\n};\r\n\r\n//scene START\r\n\r\nscene(\"start\", () => {\r\n  add([\r\n    text(\"Press enter to play\", { size: 10 }),\r\n    pos(160, 100),\r\n    origin(\"center\"),\r\n    color(255, 255, 255),\r\n  ]);\r\n  add([\r\n    text(\"Use the arrows to move\", { size: 8 }),\r\n    pos(160, 140),\r\n    origin(\"center\"),\r\n    color(255, 255, 255),\r\n  ]);\r\n  add([\r\n    text(\"and the spacebar eventually\", { size: 8 }),\r\n    pos(160, 150),\r\n    origin(\"center\"),\r\n    color(255, 255, 255),\r\n  ]);\r\n\r\n  onKeyRelease(\"enter\", () => {\r\n    go(\"game\");\r\n  });\r\n  /* onClick(() => go(\"game\")); */\r\n});\r\n\r\ngo(\"start\");\r\n\r\n//scene LOSE\r\n\r\nscene(\"lose\", (score, time) => {\r\n  add([\r\n    sprite(\"mario\", { frame: 6 }),\r\n    pos(width() / 2, height() / 2 - 100),\r\n    scale(2),\r\n    origin(\"center\"),\r\n  ]);\r\n\r\n  // display score\r\n  add([\r\n    text(`Score:${score}`, { size: 8, font: \"sink\" }),\r\n    pos(width() / 2, height() / 2 - 40),\r\n    scale(2),\r\n    origin(\"center\"),\r\n    setData(\"score\", score),\r\n  ]);\r\n\r\n  // display time\r\n  add([\r\n    text(`Time:${time.toFixed(2)}`, { size: 8, font: \"sink\" }),\r\n    pos(width() / 2, height() / 2 - 10),\r\n    scale(2),\r\n    origin(\"center\"),\r\n    setData(\"time\", time.toFixed(2)),\r\n  ]);\r\n\r\n  add([\r\n    text(`Press enter to play again`, { size: 6, font: \"sink\" }),\r\n    pos(width() / 2, height() / 2 - 60),\r\n    scale(2),\r\n    origin(\"center\"),\r\n    setData(\"time\", time.toFixed(2)),\r\n  ]);\r\n\r\n  onKeyRelease(\"enter\", () => go(\"game\"));\r\n\r\n  //highscore\r\n  /*   \r\n  add([\r\n    text(`Insert name to record highscore:`, { size: 5, font: \"sink\" }),\r\n    pos(width() / 2, height() / 2 + 20),\r\n    scale(2),\r\n    origin(\"center\"),\r\n  ]);\r\n\r\n  const input = add([\r\n    text(\"click me and write\", { size: 8, font: \"sink\" }),\r\n    pos(width() / 2, height() / 2 + 40),\r\n    scale(2),\r\n    origin(\"center\"),\r\n  ]);\r\n\r\n\r\n  addButton(\"Send\", vec2(width() / 2, height() / 2 + 60), () => {\r\n    setData(\"name\", input.text);\r\n    debug.log(\"Yea, check the highscore under the game!\");\r\n  });\r\n  addButton(\"Start Again\", vec2(width() / 2, height() / 2 + 80), () =>\r\n    go(\"game\")\r\n  );\r\n\r\n  onCharInput((ch) => {\r\n    input.text += ch;\r\n  });\r\n\r\n  onKeyPressRepeat(\"backspace\", () => {\r\n    input.text = input.text.substring(0, input.text.length - 1);\r\n  }); */\r\n\r\n  /*  onKeyPress(\"enter\", () => go(\"game\")); */\r\n\r\n  //buttons function\r\n\r\n  /* function addButton(txt, p, f) {\r\n    const btn = add([\r\n      text(txt),\r\n      pos(p),\r\n      area({ cursor: \"pointer\" }),\r\n      scale(1),\r\n      origin(\"center\"),\r\n    ]);\r\n\r\n    btn.onClick(f);\r\n\r\n    btn.onUpdate(() => {\r\n      if (btn.isHovering()) {\r\n        const t = rand(10) * 10;\r\n        btn.color = rgb(\r\n          wave(0, 255, t),\r\n          wave(0, 255, t + 2),\r\n          wave(0, 255, t + 4)\r\n        );\r\n        btn.scale = vec2(1.2);\r\n      } else {\r\n        btn.scale = vec2(1);\r\n        btn.color = rgb();\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpdate(() => cursor(\"default\")); */\r\n});\r\n\r\n//scene WIN\r\n\r\nscene(\"win\", (score, time) => {\r\n  add([\r\n    text(`YOU WON!`),\r\n    pos(width() / 2, height() / 2 - 120),\r\n    scale(2),\r\n    origin(\"center\"),\r\n  ]);\r\n  add([\r\n    sprite(\"mario\", { frame: 13 }),\r\n    pos(width() / 2, height() / 2 - 100),\r\n    scale(2),\r\n    origin(\"center\"),\r\n  ]);\r\n\r\n  add([\r\n    text(`Score:${score}`, { size: 8, font: \"sink\" }),\r\n    pos(width() / 2, height() / 2 - 40),\r\n    scale(2),\r\n    origin(\"center\"),\r\n    setData(\"score\", score),\r\n  ]);\r\n\r\n  // display time\r\n  add([\r\n    text(`Time:${time.toFixed(2)}`, { size: 8, font: \"sink\" }),\r\n    pos(width() / 2, height() / 2 - 10),\r\n    scale(2),\r\n    origin(\"center\"),\r\n    setData(\"time\", time.toFixed(2)),\r\n  ]);\r\n\r\n  add([\r\n    text(`Press enter to play again`, { size: 6, font: \"sink\" }),\r\n    pos(width() / 2, height() / 2 - 60),\r\n    scale(2),\r\n    origin(\"center\"),\r\n    setData(\"time\", time.toFixed(2)),\r\n  ]);\r\n\r\n  onKeyRelease(\"enter\", () => go(\"game\"));\r\n});\r\n\r\n//scene GAME\r\n\r\nscene(\"game\", (levelNumber = 0, score = 0, time = 0) => {\r\n  layers([\"bg\", \"game\", \"ui\"], \"game\");\r\n\r\n  /* gravity(2200); */\r\n\r\n  const level = addLevel(LEVELS[levelNumber], levelConf);\r\n\r\n  const music = play(`level${levelNumber}`, {\r\n    volume: 0.2,\r\n    detune: rand(0, 0),\r\n  });\r\n\r\n  music.play();\r\n\r\n  add([sprite(\"cloud\"), pos(20, 50), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(150, 60), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(320, 40), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(520, 50), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(620, 70), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(820, 40), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(1020, 70), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(1190, 50), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(1300, 80), layer(\"bg\")]);\r\n  add([sprite(\"cloud\"), pos(1420, 60), layer(\"bg\")]);\r\n\r\n  add([sprite(\"hill\"), pos(32, 208), layer(\"bg\"), origin(\"bot\")]);\r\n  add([sprite(\"hill\"), pos(409, 208), layer(\"bg\"), origin(\"bot\")]);\r\n  add([sprite(\"hill\"), pos(803, 208), layer(\"bg\"), origin(\"bot\")]);\r\n  add([sprite(\"hill\"), pos(1200, 208), layer(\"bg\"), origin(\"bot\")]);\r\n  add([sprite(\"hill\"), pos(1500, 208), layer(\"bg\"), origin(\"bot\")]);\r\n\r\n  add([sprite(\"shrubbery\"), pos(200, 208), layer(\"bg\"), origin(\"bot\")]);\r\n  add([sprite(\"shrubbery\"), pos(680, 208), layer(\"bg\"), origin(\"bot\")]);\r\n  add([sprite(\"shrubbery\"), pos(480, 208), layer(\"bg\"), origin(\"bot\")]);\r\n  add([sprite(\"shrubbery\"), pos(1080, 208), layer(\"bg\"), origin(\"bot\")]);\r\n  add([sprite(\"shrubbery\"), pos(1250, 208), layer(\"bg\"), origin(\"bot\")]);\r\n\r\n  add([\r\n    text(\"Level \" + (levelNumber + 1), { size: 18 }),\r\n    pos(vec2(160, 120)),\r\n    color(255, 255, 255),\r\n    origin(\"center\"),\r\n    layer(\"ui\"),\r\n    lifespan(1, { fade: 0.5 }),\r\n  ]);\r\n\r\n  //timer\r\n  add([\r\n    text(\"TIME: \", { size: 8, font: \"sink\" }),\r\n    pos(20, 10),\r\n    origin(\"center\"),\r\n    layer(\"ui\"),\r\n    fixed(),\r\n  ]);\r\n\r\n  const timer = add([\r\n    text(time, { size: 8, font: \"sink\" }),\r\n    pos(50, 10),\r\n    fixed(),\r\n    { time: 0 },\r\n    origin(\"center\"),\r\n    layer(\"ui\"),\r\n  ]);\r\n\r\n  timer.onUpdate(() => {\r\n    time += dt();\r\n    timer.text = time.toFixed(2);\r\n  });\r\n\r\n  //score\r\n\r\n  add([\r\n    text(\"SCORE: \", { size: 8, font: \"sink\" }),\r\n    pos(140, 10),\r\n    origin(\"center\"),\r\n    layer(\"ui\"),\r\n    fixed(),\r\n  ]);\r\n\r\n  const scoreText = add([\r\n    text(score, { size: 8, font: \"sink\" }),\r\n    pos(170, 10),\r\n    origin(\"center\"),\r\n    layer(\"ui\"),\r\n    fixed(),\r\n  ]);\r\n\r\n  function updateScore(points) {\r\n    score += points;\r\n    scoreText.text = score;\r\n  }\r\n\r\n  //directions\r\n\r\n  const directions = {\r\n    LEFT: \"left\",\r\n    RIGHT: \"right\",\r\n  };\r\n\r\n  let current_direction = directions.RIGHT;\r\n\r\n  //player\r\n\r\n  const player = level.spawn(\"p\", 1, 10);\r\n\r\n  const SPEED = 100;\r\n  const BULLET_SPEED = 200;\r\n\r\n  onKeyDown(\"right\", () => {\r\n    current_direction = directions.RIGHT;\r\n    if (player.isFrozen) return;\r\n    player.flipX(false);\r\n    player.move(SPEED, 0);\r\n  });\r\n\r\n  onKeyDown(\"left\", () => {\r\n    current_direction = directions.LEFT;\r\n    if (player.isFrozen) return;\r\n    player.flipX(true);\r\n    if (toScreen(player.pos).x > 20) {\r\n      player.move(-SPEED, 0);\r\n    }\r\n  });\r\n\r\n  onKeyPress(\"up\", () => {\r\n    if (player.isAlive && player.isGrounded()) {\r\n      player.jump(600);\r\n      canSquash = true;\r\n    }\r\n    play(\"jump\", {\r\n      volume: 0.05,\r\n      detune: rand(-200, 0),\r\n    });\r\n  });\r\n\r\n  //grow\r\n\r\n  function grow(rate) {\r\n    return {\r\n      update() {\r\n        const n = rate * dt();\r\n        this.scale.x += n;\r\n        this.scale.y += n;\r\n      },\r\n    };\r\n  }\r\n\r\n  // explode\r\n\r\n  function addExplode(p, n, rad, size) {\r\n    for (let i = 0; i < n; i++) {\r\n      wait(rand(n * 0.1), () => {\r\n        for (let i = 0; i < 2; i++) {\r\n          add([\r\n            pos(/* p.add(rand(vec2(-rad), vec2(rad))) */ p),\r\n            rect(4, 4),\r\n            outline(4),\r\n            scale(1 * size, 1 * size),\r\n            lifespan(0.1),\r\n            grow(rand(10, 10) * size),\r\n            origin(\"center\"),\r\n          ]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  //shooting gio\r\n\r\n  function spawnBullet(p) {\r\n    if (current_direction == directions.LEFT) {\r\n      p = p.sub(10, 0);\r\n    } else if (current_direction == directions.RIGHT) {\r\n      p = p.add(10, 0);\r\n    }\r\n    add([\r\n      sprite(\"noce\"),\r\n      area(),\r\n      pos(p),\r\n      origin(\"center\"),\r\n      /* move(RIGHT, BULLET_SPEED), */\r\n      cleanup(),\r\n      \"bullet\",\r\n      {\r\n        bulletSpeed:\r\n          current_direction == directions.LEFT\r\n            ? -1 * BULLET_SPEED\r\n            : BULLET_SPEED,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  onUpdate(\"bullet\", (b) => {\r\n    b.move(b.bulletSpeed, 0);\r\n    /* if (b.pos.x < 0 || b.pos.x > MAP_WIDTH) {\r\n      destroy(b);\r\n    } */\r\n  });\r\n\r\n  onKeyPress(\"space\", () => {\r\n    if (player.isFlamy) {\r\n      spawnBullet(player.pos.sub(-4, 10));\r\n      /* spawnBullet(player.pos.add(3, 0)); */\r\n      play(\"noce\", {\r\n        volume: 0.1,\r\n        detune: rand(-1200, 1200),\r\n      });\r\n    }\r\n    wait(0.2),\r\n      () => {\r\n        return;\r\n      };\r\n  });\r\n\r\n  onCollide(\"bullet\", \"enemy\", (b, e) => {\r\n    destroy(b);\r\n    destroy(e);\r\n    addExplode(b.pos, 1, 24, 1);\r\n  });\r\n\r\n  onCollide(\"bullet\", \"wall\", (b, e) => {\r\n    destroy(b);\r\n\r\n    addExplode(b.pos, 1, 24, 1);\r\n  });\r\n\r\n  //shooting dito\r\n\r\n  /*   const dito = get(\"dito\");\r\n\r\n  function spawnRachet() {\r\n    if (player.exists()) {\r\n      const dir = player.pos.sub(dito.pos).unit();\r\n      add([\r\n        sprite(\"racchetta\"),\r\n        area(),\r\n        pos(dito.pos),\r\n        origin(\"center\"),\r\n        move(dir, BULLET_SPEED),\r\n        cleanup(),\r\n        \"rachet\",\r\n      ]);\r\n    }\r\n  }\r\n\r\n  onUpdate(\"rachet\", (b) => {\r\n    b.move(b.bulletSpeed, 0);\r\n   \r\n  });\r\n\r\n  onUpdate(\"dito\", (d) => {\r\n    spawnRachet(d.pos.sub(-4, 10));\r\n    \r\n    play(\"noce\", {\r\n      volume: 0.1,\r\n      detune: rand(-1200, 1200),\r\n    });\r\n  });\r\n\r\n  onCollide(\"rachet\", player, (b, e) => {\r\n    destroy(b);\r\n    killed();\r\n    addExplode(b.pos, 1, 24, 1);\r\n  });\r\n\r\n  onCollide(\"rachet\", \"wall\", (b, e) => {\r\n    destroy(b);\r\n\r\n    addExplode(b.pos, 1, 24, 1);\r\n  }); */\r\n\r\n  //////////////////////////////\r\n\r\n  /*   const _dito = get(\"dito\");\r\n\r\n  const DITO_SPEED = 160;\r\n\r\n  _dito.onStateEnter(\"idle\", async () => {\r\n    await wait(0.5);\r\n    _dito.enterState(\"attack\");\r\n  });\r\n  +_dito.onStateEnter(\"attack\", async () => {\r\n    // Don't do anything if player doesn't exist anymore\r\n    if (player.exists()) {\r\n      const dir = player.pos.sub(dito.pos).unit();\r\n\r\n      add([\r\n        pos(dito.pos),\r\n        move(dir, BULLET_SPEED),\r\n        sprite(\"racchetta\"),\r\n        area(),\r\n        cleanup(),\r\n        origin(\"center\"),\r\n\r\n        \"rachet\",\r\n      ]);\r\n    }\r\n\r\n    await wait(1);\r\n    dito.enterState(\"move\");\r\n  });\r\n\r\n  _dito.onStateEnter(\"move\", async () => {\r\n    await wait(2);\r\n    _dito.enterState(\"idle\");\r\n  });\r\n\r\n  // Like .onUpdate() which runs every frame, but only runs when the current state is \"move\"\r\n  // Here we move towards the player every frame if the current state is \"move\"\r\n  _dito.onStateUpdate(\"move\", () => {\r\n    if (!player.exists()) return;\r\n    const dir = player.pos.sub(_dito.pos).unit();\r\n    _dito.move(dir.scale(DITO_SPEED));\r\n  });\r\n\r\n  // Have to manually call enterState() to trigger the onStateEnter(\"move\") event we defined above.\r\n  _dito.enterState(\"move\");\r\n\r\n  // Taking a bullet makes us disappear\r\n  player.onCollide(\"rachet\", (bullet) => {\r\n    destroy(bullet);\r\n    killed();\r\n    addKaboom(bullet.pos);\r\n  }); */\r\n\r\n  //Killed\r\n\r\n  function killed() {\r\n    // is dead :(\r\n    if (player.isAlive == false) return; // Don't run it if mario is already dead\r\n    player.die();\r\n    music.pause();\r\n    add([\r\n      text(\"Gio is dead :(\", { size: 24 }),\r\n      pos(toWorld(vec2(160, 120))),\r\n      color(255, 255, 255),\r\n      origin(\"center\"),\r\n      layer(\"ui\"),\r\n    ]);\r\n    wait(3, () => {\r\n      let totscore = score;\r\n      let tottime = time;\r\n      go(\"lose\", totscore, tottime);\r\n    });\r\n  }\r\n\r\n  // camera settings\r\n\r\n  player.onUpdate(() => {\r\n    // center camera to player\r\n    var currCam = camPos();\r\n    if (currCam.x < player.pos.x) {\r\n      camPos(player.pos.x, currCam.y);\r\n    }\r\n\r\n    if (player.isAlive && player.isGrounded()) {\r\n      canSquash = false;\r\n    }\r\n\r\n    // Check if Mario has fallen off the screen\r\n    if (player.pos.y > height() - 16) {\r\n      killed();\r\n    }\r\n  });\r\n\r\n  //collision with badguys\r\n\r\n  let canSquash = false;\r\n\r\n  player.onFall(() => {\r\n    canSquash = true;\r\n  });\r\n\r\n  player.onCollide(\"badGuy\", (baddy) => {\r\n    if (baddy.isAlive == false) return;\r\n    if (player.isAlive == false) return;\r\n    if (canSquash) {\r\n      // Mario has jumped on the bad guy:\r\n      baddy.squash();\r\n      play(\"hit\", {\r\n        volume: 0.2,\r\n        detune: rand(-100, 0),\r\n      });\r\n    } else {\r\n      // Mario has been hurt\r\n      if (player.isFlamy) {\r\n        shake(10);\r\n        wait(0.25, () => {\r\n          player.bigger();\r\n          play(\"getsmall\", {\r\n            volume: 0.2,\r\n            detune: rand(-100, 0),\r\n          });\r\n        });\r\n      } else if (player.isBig) {\r\n        shake(10);\r\n        wait(0.25, () => {\r\n          player.smaller();\r\n          play(\"getsmall\", {\r\n            volume: 0.2,\r\n            detune: rand(-100, 0),\r\n          });\r\n        });\r\n      } else {\r\n        // Mario is dead :(\r\n        shake(10);\r\n        killed();\r\n      }\r\n    }\r\n  });\r\n\r\n  player.onCollide(\"badGuyShark\", (baddy) => {\r\n    if (baddy.isAlive == false) return;\r\n    if (player.isAlive == false) return;\r\n    // Mario has been hurt\r\n    if (player.isFlamy) {\r\n      shake(10);\r\n      wait(0.25, () => {\r\n        player.bigger();\r\n        play(\"getsmall\", {\r\n          volume: 0.2,\r\n          detune: rand(-100, 0),\r\n        });\r\n      });\r\n    } else if (player.isBig) {\r\n      shake(10);\r\n      wait(0.25, () => {\r\n        player.smaller();\r\n        play(\"getsmall\", {\r\n          volume: 0.2,\r\n          detune: rand(-100, 0),\r\n        });\r\n      });\r\n    } else {\r\n      // Mario is dead :(\r\n      shake(10);\r\n      killed();\r\n    }\r\n  });\r\n\r\n  //headbutt\r\n\r\n  player.on(\"headbutt\", (obj) => {\r\n    if (obj.is(\"questionBox\")) {\r\n      if (obj.is(\"coinBox\")) {\r\n        let coin = level.spawn(\"c\", obj.gridPos.sub(0, 1));\r\n        coin.bump();\r\n        updateScore(5);\r\n        play(\"coin\", {\r\n          volume: 0.2,\r\n          detune: rand(-400, 100),\r\n        });\r\n      } else if (obj.is(\"mushyBox\")) {\r\n        level.spawn(\"M\", obj.gridPos.sub(0, 1));\r\n        play(\"goodbox\", {\r\n          volume: 0.7,\r\n          detune: rand(-400, 100),\r\n        });\r\n      } else if (obj.is(\"flowerBox\")) {\r\n        level.spawn(\"F\", obj.gridPos.sub(0, 1));\r\n        play(\"goodbox\", {\r\n          volume: 0.7,\r\n          detune: rand(-400, 100),\r\n        });\r\n      }\r\n      var pos = obj.gridPos;\r\n      destroy(obj);\r\n      var box = level.spawn(\"!\", pos);\r\n      box.bump();\r\n    }\r\n  });\r\n\r\n  //fungo & fiore\r\n\r\n  player.onCollide(\"bigMushy\", (mushy) => {\r\n    destroy(mushy);\r\n    player.bigger();\r\n    play(\"mushroom\", {\r\n      volume: 0.2,\r\n      detune: rand(-400, 100),\r\n    });\r\n  });\r\n\r\n  player.onCollide(\"Flower\", (flower) => {\r\n    destroy(flower);\r\n    player.flamy();\r\n    play(\"flower\", {\r\n      volume: 0.2,\r\n      detune: rand(-400, 100),\r\n    });\r\n  });\r\n\r\n  //castle\r\n\r\n  player.onCollide(\"castle\", (castle, side) => {\r\n    player.freeze();\r\n    music.pause();\r\n    play(\"stageclear\", {\r\n      volume: 0.2,\r\n      detune: rand(-200, 100),\r\n    });\r\n    add([\r\n      text(\"Good Giob!\", { size: 24 }),\r\n      pos(toWorld(vec2(160, 120))),\r\n      color(255, 255, 255),\r\n      origin(\"center\"),\r\n      layer(\"ui\"),\r\n    ]);\r\n    wait(7, () => {\r\n      let nextLevel = levelNumber + 1;\r\n      let totscore = score;\r\n      let tottime = time;\r\n\r\n      if (nextLevel >= LEVELS.length) {\r\n        go(\"win\", totscore, tottime);\r\n      } else {\r\n        go(\"game\", nextLevel, totscore, tottime);\r\n      }\r\n    });\r\n  });\r\n\r\n  //shark move\r\n\r\n  onUpdate(\"shark\", (s) => {\r\n    s.move(0, -s.speed);\r\n\r\n    if (s.pos.y > 200 || s.pos.y < 150) {\r\n      s.speed = s.speed * -1;\r\n    }\r\n  });\r\n});\r\n\r\n//patrol function\r\n\r\nfunction patrol(distance = 100, speed = 50, dir = 1) {\r\n  return {\r\n    id: \"patrol\",\r\n    require: [\"pos\", \"area\"],\r\n    startingPos: vec2(0, 0),\r\n    add() {\r\n      this.startingPos = this.pos;\r\n      this.onCollide(\"badGuy\", () => {\r\n        dir = -dir;\r\n      });\r\n      this.onCollide(\"pipe\", () => {\r\n        dir = -dir;\r\n      });\r\n    },\r\n    update() {\r\n      if (Math.abs(this.pos.x - this.startingPos.x) >= distance) {\r\n        dir = -dir;\r\n      }\r\n      this.move(speed * dir, 0);\r\n    },\r\n  };\r\n}\r\n\r\n//enemies set\r\n\r\nfunction tarma() {\r\n  return {\r\n    id: \"tarma\",\r\n    require: [\"pos\", \"area\", \"sprite\", \"patrol\"],\r\n    isAlive: true,\r\n    update() {},\r\n    squash() {\r\n      this.isAlive = false;\r\n      this.unuse(\"patrol\");\r\n      this.stop();\r\n      this.frame = 2;\r\n      this.area.width = 18;\r\n      this.area.height = 8;\r\n      this.use(lifespan(0.5, { fade: 0.1 }));\r\n    },\r\n  };\r\n}\r\n\r\nfunction ami() {\r\n  return {\r\n    id: \"ami\",\r\n    require: [\"pos\", \"area\", \"sprite\", \"patrol\"],\r\n    isAlive: true,\r\n    update() {},\r\n    squash() {\r\n      this.isAlive = false;\r\n      this.unuse(\"patrol\");\r\n      this.stop();\r\n      this.frame = 5;\r\n      this.area.width = 26;\r\n      this.area.height = 18;\r\n      this.use(lifespan(0.5, { fade: 0.1 }));\r\n    },\r\n  };\r\n}\r\n\r\nfunction dito() {\r\n  return {\r\n    id: \"dito\",\r\n    require: [\"pos\", \"area\", \"sprite\", \"patrol\", \"state\"],\r\n    isAlive: true,\r\n\r\n    update() {},\r\n    squash() {\r\n      this.isAlive = false;\r\n      this.unuse(\"patrol\");\r\n      this.stop();\r\n      this.frame = 12;\r\n      this.area.width = 20;\r\n      this.area.height = 22;\r\n      this.use(lifespan(0.5, { fade: 0.1 }));\r\n    },\r\n  };\r\n}\r\n\r\nfunction shark() {\r\n  return {\r\n    id: \"shark\",\r\n    require: [\"pos\", \"area\", \"sprite\"],\r\n    isAlive: true,\r\n    update() {},\r\n    squash() {\r\n      this.isAlive = false;\r\n      this.unuse(\"patrol\");\r\n      this.stop();\r\n      this.frame = 12;\r\n      this.area.width = 20;\r\n      this.area.height = 22;\r\n      this.use(lifespan(0.5, { fade: 0.1 }));\r\n    },\r\n  };\r\n}\r\n\r\n//general bump\r\n\r\nfunction bump(offset = 8, speed = 2, stopAtOrigin = true) {\r\n  return {\r\n    id: \"bump\",\r\n    require: [\"pos\"],\r\n    bumpOffset: offset,\r\n    speed: speed,\r\n    bumped: false,\r\n    origPos: 0,\r\n    direction: -1,\r\n    update() {\r\n      if (this.bumped) {\r\n        this.pos.y = this.pos.y + this.direction * this.speed;\r\n        if (this.pos.y < this.origPos - this.bumpOffset) {\r\n          this.direction = 1;\r\n        }\r\n        if (stopAtOrigin && this.pos.y >= this.origPos) {\r\n          this.bumped = false;\r\n          this.pos.y = this.origPos;\r\n          this.direction = -1;\r\n        }\r\n      }\r\n    },\r\n    bump() {\r\n      this.bumped = true;\r\n      this.origPos = this.pos.y;\r\n    },\r\n  };\r\n}\r\n\r\n//GIO\r\nfunction mario() {\r\n  return {\r\n    id: \"mario\",\r\n    require: [\"body\", \"area\", \"sprite\", \"bump\"],\r\n    smallAnimation: \"Running\",\r\n    bigAnimation: \"RunningBig\",\r\n    flameanimation: \"Loop\",\r\n    smallStopFrame: 0,\r\n    bigStopFrame: 8,\r\n    flameStopFrame: 17,\r\n    smallJumpFrame: 5,\r\n    bigJumpFrame: 13,\r\n    flameJumpFrame: 22,\r\n    flameShotFrame: 25,\r\n    /* smallDieFrame: 6, */\r\n    isBig: false,\r\n    isFrozen: false,\r\n    isFlamy: false,\r\n    isAlive: true,\r\n    update() {\r\n      if (this.isFrozen) {\r\n        this.standing();\r\n        return;\r\n      }\r\n\r\n      if (this.isFlamy && isKeyDown(\"space\")) {\r\n        this.shooting();\r\n        return;\r\n      }\r\n\r\n      if (!this.isGrounded()) {\r\n        this.jumping();\r\n      } else {\r\n        if (isKeyDown(\"left\") || isKeyDown(\"right\")) {\r\n          this.running();\r\n        } else {\r\n          this.standing();\r\n        }\r\n      }\r\n    },\r\n    bigger() {\r\n      this.isBig = true;\r\n      this.isFlamy = false;\r\n      this.area.width = 20;\r\n      this.area.height = 22;\r\n    },\r\n    flamy() {\r\n      this.isShooting = false;\r\n      this.isBig = false;\r\n      this.isFlamy = true;\r\n      this.area.width = 20;\r\n      this.area.height = 22;\r\n    },\r\n    smaller() {\r\n      this.isBig = false;\r\n      this.isFlamy = false;\r\n      this.area.width = 16;\r\n      this.area.height = 16;\r\n    },\r\n    standing() {\r\n      this.stop();\r\n      if (this.isBig) {\r\n        this.frame = this.bigStopFrame;\r\n      } else if (this.isFlamy) {\r\n        this.frame = this.flameStopFrame;\r\n      } else {\r\n        this.frame = this.smallStopFrame;\r\n      }\r\n      /* this.frame = this.isBig ? this.bigStopFrame : this.smallStopFrame; */\r\n    },\r\n    jumping() {\r\n      this.stop();\r\n      if (this.isBig) {\r\n        this.frame = this.bigJumpFrame;\r\n      } else if (this.isFlamy) {\r\n        this.frame = this.flameJumpFrame;\r\n      } else {\r\n        this.frame = this.smallJumpFrame;\r\n      }\r\n      /* this.frame = this.isBig ? this.bigJumpFrame : this.smallJumpFrame; */\r\n    },\r\n    shooting() {\r\n      this.stop();\r\n      if (this.isFlamy) {\r\n        this.frame = this.flameShotFrame;\r\n      }\r\n    },\r\n    running() {\r\n      let animation;\r\n      if (this.isBig) {\r\n        animation = this.bigAnimation;\r\n      } else if (this.isFlamy) {\r\n        animation = this.flameanimation;\r\n      } else {\r\n        animation = this.smallAnimation;\r\n      }\r\n      /* const animation = this.isBig ? this.bigAnimation : this.smallAnimation; */\r\n      if (this.curAnim() !== animation) {\r\n        this.play(animation);\r\n      }\r\n    },\r\n    freeze() {\r\n      this.isFrozen = true;\r\n    },\r\n    die() {\r\n      /* this.stop();\r\n      this.frame = this.smallDieFrame; */\r\n      this.unuse(\"body\");\r\n      this.bump();\r\n      this.isAlive = false;\r\n      this.freeze();\r\n      this.use(lifespan(6, { fade: 1 }));\r\n      play(\"gameover\", {\r\n        volume: 0.2,\r\n        detune: rand(-100, 0),\r\n      });\r\n    },\r\n  };\r\n}\r\n"]}
